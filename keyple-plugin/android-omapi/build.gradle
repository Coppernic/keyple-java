
buildscript {
    repositories {
        mavenCentral()
        jcenter()
        google()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1'
    }
}

plugins {
    id "com.diffplug.gradle.spotless" version "3.9.0"
}

allprojects {

    repositories {
        mavenCentral()
        jcenter()
    }

    apply plugin: 'pmd'

    pmd {
        ruleSets = [
                "java-basic",
                "java-braces",
        ]
    }
}

group 'org.eclipse.keyple'
version = '0.9.1-SNAPSHOT'

apply plugin: 'com.android.library'

sourceCompatibility = 1.6

apply plugin: 'maven'

task createPom {
    pom {
        project {
            groupId project.group
            version project.version
        }
    }.writeTo("pom.xml")
}

android {
    compileSdkVersion 26
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
        }
        release {
            minifyEnabled false
        }
        circle_ci {
            debuggable false
            minifyEnabled true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_6
        targetCompatibility JavaVersion.VERSION_1_6
    }

    testOptions {
        unitTests.returnDefaultValues = true//mock Log Android object
    }

    buildToolsVersion '26.0.2'

    lintOptions {
        abortOnError false
    }

    libraryVariants.all { variant ->
        task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
            description "Generates Javadoc for variant ${variant.name.capitalize()}"
            println "Generates Javadoc for variant ${variant.name.capitalize()}"

            source = variant.javaCompile.source
            options.links("http://docs.oracle.com/javase/6/docs/api/")
            options.links("http://d.android.com/reference/")

            println 'classpath : ' + classpath.getFiles()
            println 'options links : ' + options.links
            println 'source : ' + source.getFiles()

            // First add all of your dependencies to the classpath, then add the android jars
            doFirst {
                //doFirst is needed else we get the error "Cannot create variant 'android-lint' after configuration" with gradle 4.4+
                classpath = files(variant.javaCompile.classpath.files, project.android.getBootClasspath())
            }
            classpath += files(android.getBootClasspath())


            // We're excluding these generated files
            exclude '**/BuildConfig.java'
            exclude '**/R.java'
            failOnError = false
            destinationDir = file("${project.docsDir}/javadoc")
            //destinationDir = file(System.getProperty("user.home") +"/pages")

            println 'destinationDir : ' + destinationDir
        }

    }

}
/*
*/


repositories {
    mavenCentral()
    google()
}

dependencies {
    implementation fileTree(include: ['*.jar'], exclude: ['org.simalliance.openmobileapi.jar'], dir: 'libs')
    implementation 'com.android.support:support-v4:26.1.0'
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation project(':keyple-calypso')
    //compile with OMAPI jar but do not include it
    compileOnly files('libs/org.simalliance.openmobileapi.jar')

    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'

    /** Test **/
    testImplementation files('libs/org.simalliance.openmobileapi.jar')

    /**Power mock**/
    androidTestCompile "org.mockito:mockito-android:2.7.21"
    androidTestCompile "org.powermock:powermock-api-mockito:1.6.6"
    androidTestCompile 'org.powermock:powermock-module-junit4:1.6.6'

    testImplementation 'junit:junit:4.12'
    testCompile 'org.powermock:powermock-api-mockito:1.6.6'
    testCompile 'org.powermock:powermock-module-junit4:1.6.6'

    /**End of power mock **/
}
